name: chocolatine
on:
  push:
    branches-ignore:
      - 'ga-ignore-*'
  pull_request:
    branches-ignore:
      - 'ga-ignore-*'
env:
  MIRROR_URL: "git@github.com:EpitechPromo2028/B-DOP-200-LIL-2-1-chocolatine-clement.bouret.git"
  EXECUTABLE: "chocolatine"
jobs:
  is_repo_a_mirror:
    runs-on: ubuntu-latest
    steps:
      - name: Check if repo is a mirror
        run: |
          MIRROR_REPO_NAME=$(echo "${MIRROR_URL}" | sed 's/.*\/\([^\/]*\)\.git/\1/')
          echo "Mirror repository name: $MIRROR_REPO_NAME"
          if [[ "${GITHUB_REPOSITORY}" == "EpitechPromo2028/$MIRROR_REPO_NAME" ]]; then
            echo "Error: This repository is a mirror"
            exit 1
          else
            echo "This repository is not a mirror"
          fi
        env:
          GITHUB_REPOSITORY: ${{ github.repository }}
          MIRROR_URL: ${{ env.MIRROR_URL }}
  check_coding_style:
    runs-on: ubuntu-latest
    needs: is_repo_a_mirror
    container:
      image: "ghcr.io/epitech/coding-style-checker:latest"
      options: --privileged
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Coding Style Check
        run: check.sh . /tmp
      - name: Coding Style Annotation
        run: |
          input="/tmp/coding-style-reports.log"
          while IFS= read -r line; do
            fields=($(echo "$line" | cut -d':' --output-delimiter=' ' -f1-))
            echo "::error title=${fields[2]} coding style error,file=${fields[0]},line=${fields[1]}::${fields[3]}"
          done < "$input"
      - name: Report Result
        run: |
          if [ $(wc -l < /tmp/coding-style-reports.log) -gt 0 ]; then
            exit 1
          fi
  build:
    runs-on: ubuntu-latest
    needs: [check_coding_style, is_repo_a_mirror]
    container:
      image: "epitechcontent/epitest-docker:latest"
      options: --privileged
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Program Compilation
        run: make
  test:
    runs-on: ubuntu-latest
    needs: build
    container:
      image: "epitechcontent/epitest-docker:latest"
      options: --privileged
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Run tests
        run: make tests_run
        timeout-minutes: 2
  deploy:
    runs-on: ubuntu-latest
    needs: test
    if: github.repository != 'EpitechPromo2028/B-DOP-200-LIL-2-1-chocolatine-clement.bouret'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Mirror Repository
        uses: pixta-dev/repository-mirroring-action@v1
        with:
          target_repo_url: ${{ env.MIRROR_URL }}
          ssh_private_key: ${{ secrets.GIT_SSH_PRIVATE_KEY }}